#!/bin/bash

set -e # exit immediately if a simple command exits with a non-zero status
set -u # report the usage of uninitialized variables

# Setup env vars and folders for the webapp_ctl script
source /var/vcap/jobs/redis/helpers/ctl_setup.sh 'redis'

export PORT=${PORT:-5000}
export LANG=en_US.UTF-8

case $1 in
  start)
    pid_guard $PIDFILE $JOB_NAME

    ############ REDIS LINUX CONFIG ############
    # set maximum number of open file descriptors
    ulimit -n <%= p("redis.max_open_files").to_i %>

    # set kernel virtual memory accounting mode = always overcommit, never check
    if [ -f /proc/sys/vm/overcommit_memory ] && [ `cat /proc/sys/vm/overcommit_memory` -ne 1 ]; then
        echo 1 > /proc/sys/vm/overcommit_memory
    fi

    # disable Transparent Huge Pages (THP) support
    if [ -f /sys/kernel/mm/transparent_hugepage/enabled ]; then
      echo 'never' > /sys/kernel/mm/transparent_hugepage/enabled
    fi

    # set the limit of socket listen() backlog
    if [ -f /proc/sys/net/core/somaxconn ] && [ `cat /proc/sys/net/core/somaxconn` -lt <%= p("redis.tcp-backlog").to_i %> ]; then
      echo <%= p("redis.tcp-backlog").to_i %> > /proc/sys/net/core/somaxconn
    fi

    # set the maximum number of remembered connection requests
    if [ -f /proc/sys/net/ipv4/tcp_max_syn_backlog ] && [ `cat /proc/sys/net/ipv4/tcp_max_syn_backlog` -lt <%= p("redis.tcp-backlog").to_i %> ]; then
      echo <%= p("redis.tcp-backlog").to_i %> > /proc/sys/net/ipv4/tcp_max_syn_backlog
    fi


    ############ start redis ############
    exec chpst -u vcap:vcap redis-server $JOB_DIR/config/redis.conf \
         1>>$LOG_DIR/$JOB_NAME.stdout.log \
         2>>$LOG_DIR/$JOB_NAME.stderr.log

    ;;

  stop)
    kill_and_wait $PIDFILE

    ;;
  *)
    echo "Usage: redis_ctl {start|stop}"

    ;;
esac
exit 0
